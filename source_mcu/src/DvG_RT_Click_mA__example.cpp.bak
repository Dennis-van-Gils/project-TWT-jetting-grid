/*
MIKROE 4-20 mA R/T click board demo

https://github.com/Dennis-van-Gils/
Dennis van Gils
20-07-2022
*/

#include <Arduino.h>

#include "DvG_RT_Click_mA.h"

#define Ser Serial

const uint8_t PIN_R_CLICK = 5;
const uint8_t PIN_T_CLICK = 6;

const uint32_t DAQ_DT = 2; // Desired oversampling interval [ms]
const float DAQ_LP = 10.;  // Low-pass filter cut-off frequency [Hz]

R_Click R_click(PIN_R_CLICK, RT_Click_Calibration{4.03, 19.93, 832, 3999},
                DAQ_DT, DAQ_LP);
T_Click T_click(PIN_T_CLICK, RT_Click_Calibration{4.02, 19.99, 800, 3980});

void setup() {
  Ser.begin(9600);
  R_click.begin();
  T_click.begin();
}

void loop() {
  uint32_t now = millis();
  static uint32_t tick = now;
  static uint32_t tock = now;
  static uint8_t mA_out = 4;

  R_click.bitval2mA(2);

  if (R_click.poll_oversampling()) {
    // DEBUG: Show obtained DT interval
    // Ser.println(R_click.get_last_obtained_DAQ_DT());
  }

  // Cycle through the output currents [4, 12, 20] mA, every 10 sec
  if (now - tock > 10000) {
    tock = now;

    if (mA_out == 4) {
      mA_out = 12;
    } else if (mA_out == 12) {
      mA_out = 20;
    } else {
      mA_out = 4;
    }
    T_click.set_mA(mA_out);
  }

  // Report readings over serial every 1 sec
  if (now - tick > 1000) {
    tick = now;

    Ser.print("T click: ");
    Ser.printf("%4u", T_click.get_last_set_bitval());
    Ser.print('\t');
    Ser.printf("%2u", mA_out);
    Ser.print("   |   R click: ");
    Ser.printf("%4u", (uint16_t)round(R_click.get_oversampled_bitval()));
    Ser.print('\t');
    Ser.print(R_click.get_oversampled_mA(), 2);
    Ser.print('\n');
  }
}
